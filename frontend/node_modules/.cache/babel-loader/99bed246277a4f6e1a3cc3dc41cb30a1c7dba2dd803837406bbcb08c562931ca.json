{"ast":null,"code":"export class ResponseError extends Error {\n  constructor(response) {\n    super(response.statusText);\n    this.response = void 0;\n    this.code = void 0;\n    this.name = void 0;\n    this.response = response;\n    this.name = \"ResponseError\";\n    this.code = \"errorglobal\";\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      statusCode: this.response.status\n    };\n  }\n}\nexport class ForbiddenError extends Error {\n  constructor(statusCode) {\n    super();\n    this.code = void 0;\n    this.statusCode = void 0;\n    this.name = void 0;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ForbiddenError);\n    }\n    this.name = \"ForbiddenError\";\n    // Informations de déboguage personnalisées\n    this.code = \"errorforbidden\";\n    this.statusCode = statusCode;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      statusCode: this.statusCode\n    };\n  }\n}\nexport class ValidationError extends Error {\n  constructor(message, messageDetails, code, messageArguments, statusCode) {\n    // Passer les arguments restants (incluant ceux spécifiques au vendeur) au constructeur parent\n    super();\n\n    // Maintenir dans la pile une trace adéquate de l'endroit où l'erreur a été déclenchée (disponible seulement en V8)\n    this.messageDetails = void 0;\n    this.code = void 0;\n    this.messageArguments = void 0;\n    this.statusCode = void 0;\n    this.name = void 0;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n    this.name = \"ValidationError\";\n    // Informations de déboguage personnalisées\n    this.message = message;\n    this.messageDetails = messageDetails;\n    this.messageArguments = messageArguments;\n    this.code = code;\n    this.statusCode = statusCode;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      messageDetails: this.messageDetails,\n      messageArguments: this.messageArguments,\n      statusCode: this.statusCode\n    };\n  }\n}\n/**\n * Parses the JSON returned by a network request\n *\n */\nasync function parseJSON(response, isResponseText) {\n  if (response.status === 200 || response.status === 201) {\n    try {\n      if (isResponseText) {\n        const body = await response.text();\n        return body;\n      } else {\n        const body = await response.json();\n        return body;\n      }\n    } catch (e) {\n      console.warn(e, \"might be better to send a 204 code\");\n      return null;\n    }\n  }\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType && contentType.indexOf(\"text\") !== -1) {\n    const txt = await response.text();\n    return {\n      message: txt\n    };\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nasync function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  if (response.status === 400) {\n    const json = await response.json();\n    const error = new ValidationError(json.message, json.messageDetails, json.code, json.messageArguments, response.status);\n    throw error;\n  }\n  if (response.status === 401) {\n    const error = new ForbiddenError(response.status);\n    throw error;\n  }\n  const error = new ResponseError(response);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default async function request(url, options, isFile, isResponseText) {\n  if (!options) {\n    options = {};\n  }\n  console.log(\"coucou\", process.env.REACT_APP_STRAPI_TOKEN);\n  if (options && !options.headers && !isFile) {\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    headers.set(\"Authorization\", `Bearer ${process.env.REACT_APP_STRAPI_TOKEN}`);\n    options.headers = headers;\n  }\n  options.credentials = \"include\";\n  const fetchResponse = await fetch(url, options);\n  const response = await checkStatus(fetchResponse);\n  return parseJSON(response, isResponseText);\n}","map":{"version":3,"names":["ResponseError","Error","constructor","response","statusText","code","name","toJSON","message","statusCode","status","ForbiddenError","captureStackTrace","ValidationError","messageDetails","messageArguments","parseJSON","isResponseText","body","text","json","e","console","warn","contentType","headers","get","indexOf","txt","checkStatus","error","request","url","options","isFile","log","process","env","REACT_APP_STRAPI_TOKEN","Headers","set","credentials","fetchResponse","fetch"],"sources":["/Users/edenwisniewski/Desktop/roquette.nosync/frontend/src/api/utils.tsx"],"sourcesContent":["interface IMessageArguments {\n  field: string;\n}\ninterface IErrorMessageDetails {\n  code: string;\n  field: string;\n  message: string;\n  messageArgs: IMessageArguments;\n  messageArguments: IMessageArguments;\n  value: string;\n}\nexport interface IResponseErrorJSON {\n  name: \"ForbiddenError\" | \"ResponseError\" | \"ValidationError\";\n  code: string;\n  message: string;\n  statusCode: number;\n  messageDetails?: IErrorMessageDetails | IErrorMessageDetails[];\n  messageArguments?: IMessageArguments;\n}\n\nexport class ResponseError extends Error {\n  public response: Response;\n  code: string;\n  name: \"ResponseError\";\n\n  constructor(response: Response) {\n    super(response.statusText);\n    this.response = response;\n    this.name = \"ResponseError\";\n    this.code = \"errorglobal\";\n  }\n\n  toJSON(): IResponseErrorJSON {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      statusCode: this.response.status,\n    };\n  }\n}\n\nexport class ForbiddenError extends Error {\n  code: string;\n  statusCode: number;\n  name: \"ForbiddenError\";\n\n  constructor(statusCode: number) {\n    super();\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ForbiddenError);\n    }\n    this.name = \"ForbiddenError\";\n    // Informations de déboguage personnalisées\n    this.code = \"errorforbidden\";\n    this.statusCode = statusCode;\n  }\n  toJSON(): IResponseErrorJSON {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      statusCode: this.statusCode,\n    };\n  }\n}\n\nexport class ValidationError extends Error {\n  messageDetails: IErrorMessageDetails | IErrorMessageDetails[];\n  code: string;\n  messageArguments: IMessageArguments;\n  statusCode: number;\n  name: \"ValidationError\";\n\n  constructor(\n    message: string,\n    messageDetails: IErrorMessageDetails | IErrorMessageDetails[],\n    code: string,\n    messageArguments: IMessageArguments,\n    statusCode: number\n  ) {\n    // Passer les arguments restants (incluant ceux spécifiques au vendeur) au constructeur parent\n    super();\n\n    // Maintenir dans la pile une trace adéquate de l'endroit où l'erreur a été déclenchée (disponible seulement en V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n    this.name = \"ValidationError\";\n    // Informations de déboguage personnalisées\n    this.message = message;\n    this.messageDetails = messageDetails;\n    this.messageArguments = messageArguments;\n    this.code = code;\n    this.statusCode = statusCode;\n  }\n  toJSON(): IResponseErrorJSON {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      messageDetails: this.messageDetails,\n      messageArguments: this.messageArguments,\n      statusCode: this.statusCode,\n    };\n  }\n}\n/**\n * Parses the JSON returned by a network request\n *\n */\nasync function parseJSON(response: Response, isResponseText?: boolean) {\n  if (response.status === 200 || response.status === 201) {\n    try {\n      if (isResponseText) {\n        const body = await response.text();\n        return body;\n      } else {\n        const body = await response.json();\n        return body;\n      }\n    } catch (e) {\n      console.warn(e, \"might be better to send a 204 code\");\n      return null;\n    }\n  }\n\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType && contentType.indexOf(\"text\") !== -1) {\n    const txt = await response.text();\n    return {\n      message: txt,\n    };\n  }\n\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nasync function checkStatus(response: Response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  if (response.status === 400) {\n    const json = await response.json();\n    const error = new ValidationError(\n      json.message,\n      json.messageDetails,\n      json.code,\n      json.messageArguments,\n      response.status\n    );\n    throw error;\n  }\n  if (response.status === 401) {\n    const error = new ForbiddenError(response.status);\n    throw error;\n  }\n  const error = new ResponseError(response);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default async function request<T>(\n  url: string,\n  options?: RequestInit,\n  isFile?: boolean,\n  isResponseText?: boolean\n): Promise<T | { err: ResponseError }> {\n  if (!options) {\n    options = {};\n  }\n\n  console.log(\"coucou\", process.env.REACT_APP_STRAPI_TOKEN);\n\n  if (options && !options.headers && !isFile) {\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    headers.set(\n      \"Authorization\",\n      `Bearer ${process.env.REACT_APP_STRAPI_TOKEN}`\n    );\n    options.headers = headers;\n  }\n  options.credentials = \"include\";\n\n  const fetchResponse = await fetch(url, options);\n  const response = await checkStatus(fetchResponse);\n\n  return parseJSON(response, isResponseText);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}